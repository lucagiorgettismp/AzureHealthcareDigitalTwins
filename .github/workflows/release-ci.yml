name: Release CI

on:
  push:
    tags:
      - "v*.*.*"

env:
  SIMULATOR_SOLUTION_PATH: '.\HealthcareVitalSignsMonitor\Simulator\Simulator.csproj'
  CLIENT_SOLUTION_PATH: '.\HealthcareVitalSignsMonitor\Client\Client.csproj'
  PACKAGES_PATH: '.\HealthcareVitalSignsMonitor\packages\'

jobs:
  # Build simulator
  build-simulator:
    runs-on: [windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ env.SIMULATOR_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}

      - name: Build
        run: msbuild ${{ env.SIMULATOR_SOLUTION_PATH }} /p:Configuration=Release

      - name: Zip Simulator
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: .\HealthcareVitalSignsMonitor\Simulator\bin\Release\
          # Name of output zip file
          dest: Simulator.zip
          # Whether to add subdirectories to simply zip all files to the root
          # recursive: false # optional, default is true

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Simulator
          path: Simulator.zip

  # Build client
  build-client:
    runs-on: [windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ env.CLIENT_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}

      - name: Build
        run: msbuild ${{ env.CLIENT_SOLUTION_PATH }} /p:Configuration=Release

      - name: Zip Client
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: .\HealthcareVitalSignsMonitor\Client\bin\Release\
          # Name of output zip file
          dest: Client.zip
          # Whether to add subdirectories to simply zip all files to the root
          # recursive: false # optional, default is true

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Client
          path: Client.zip

  # Build report
  build-report:
    runs-on: [ubuntu-latest]

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: doc
          pre_compile: "tlmgr update --self --all"
          root_file: main.tex
          args: "-lualatex --file-line-error --interaction=nonstopmode"

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Doc
          path: doc/main.pdf

  # Create a release
  release:
    runs-on: [ubuntu-latest]
    needs: [build-report, build-client, build-simulator]
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/download-artifact@master
      with:
        name: Simulator

    - uses: actions/download-artifact@master
      with:
        name: Client

    - uses: actions/download-artifact@master
      with:
        name: Doc

    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v3.0.0
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v0.1.14
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          Simulator.zip
          Client.zip
          main.pdf
        fail_on_unmatched_files: true

  # Send a failure message Telegram
  jobs-failure:
    needs: [build-report, build-client, build-simulator, release]
    if: failure()
    runs-on: [ubuntu-latest]

    steps:
    - name: Send telegram failure message to Luca
      uses: appleboy/telegram-action@master

      with:
        to: ${{ secrets.TELEGRAM_TO_LUCA }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
              New release
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>Release ${{ github.ref }}</b>
              ❌ <b>FAILED</b> ❌
        format: html
        disable_web_page_preview: true

    - name: Send telegram failure message to Lorenzo
      uses: appleboy/telegram-action@master

      with:
        to: ${{ secrets.TELEGRAM_TO_LORENZO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
              New release
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>Release ${{ github.ref }}</b>
              ❌ <b>FAILED</b> ❌
        format: html
        disable_web_page_preview: true

  # Send a success message Telegram
  jobs-success:
    needs: [build-report, build-client, build-simulator, release]
    if: success()
    runs-on: [ubuntu-latest]

    steps:
    - name: Send telegram success message to Luca
      uses: appleboy/telegram-action@master

      with:
        to: ${{ secrets.TELEGRAM_TO_LUCA }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
              New release
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>Release ${{ github.ref }}</b>
              ✅ <b>SUCCEDED</b> ✅
        format: html
        disable_web_page_preview: true

    - name: Send telegram success message to Lorenzo
      uses: appleboy/telegram-action@master

      with:
        to: ${{ secrets.TELEGRAM_TO_LORENZO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
              New release
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>Release ${{ github.ref }}</b>
              ✅ <b>SUCCEDED</b> ✅
        format: html
        disable_web_page_preview: true
