# This is a basic workflow to help you get started with Actions

name: Test CI

# Controls when the workflow will run
on:
  push:
    branches: [ tests ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TEST_SOLUTION_PATH: './VitalSignsMonitorSimulator/SimulatorTests/SimulatorTests.csproj'
  PACKAGES_PATH: '.\VitalSignsMonitorSimulator\packages\'  
  DOTNET_VERSION: '3.1'

jobs:
  execute-tests:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup .NET Core SDK ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version:  ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore ${{ env.TEST_SOLUTION_PATH }}

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5
        
      - name: Restore NuGet packages
        run: nuget restore ${{ env.TEST_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}

      - name: Build
        run: msbuild ${{ env.TEST_SOLUTION_PATH }} /p:Configuration=Release

      - name: Test
        run: mstest ${{ env.TEST_SOLUTION_PATH }}

      - uses: codecov/codecov-action@v2
        name: Create coverage
        with:
          working-directory: TEST_SOLUTION_PATH
          name: codecov-simulator
          verbose: true
          fail_ci_if_error: true

