# This is a basic workflow to help you get started with Actions

name: Build and Release CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  SIMULATOR_SOLUTION_PATH: '.\VitalSignsMonitorSimulator\Simulator\Simulator.csproj'
  CLIENT_SOLUTION_PATH: '.\VitalSignsMonitorSimulator\Client\Client.csproj'
  PACKAGES_PATH: '.\VitalSignsMonitorSimulator\packages\'
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy-app-function:
    runs-on: windows-latest

    env:
      AZURE_FUNCTIONAPP_PACKAGE_PATH: '.\AzureTools\AzureAppFunctions\AppFunctions' # set this to the path to your web app project, defaults to the repository root
      DOTNET_VERSION: '3.1' # set this to the dotnet version to use

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'healthcareIoTHubToDT'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_209DF526DE564123BAA37635737D89AB }}


  build-simulator:
    runs-on: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
  
      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ env.SIMULATOR_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}
        
      - name: Build
        run: msbuild ${{ env.SIMULATOR_SOLUTION_PATH }} /p:Configuration=Release
        
      - uses: actions/upload-artifact@master
        with:
          name: Simulator
          path: .\VitalSignsMonitorSimulator\Simulator\bin\Release\Simulator.exe 
        
  build-client:
    runs-on: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
  
      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ env.CLIENT_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}
        
      - name: Build
        run: msbuild ${{ env.CLIENT_SOLUTION_PATH }} /p:Configuration=Release
        
      - uses: actions/upload-artifact@master
        with:
          name: Client
          path: .\VitalSignsMonitorSimulator\Client\bin\Release\Client.exe
          
  release:
    runs-on: ubuntu-latest
    steps:
      #- name: Tag/Release on Push Action
      # You may pin to the exact commit or the version.
      # uses: rymndhng/release-on-push-action@c76a55ddd0cbd67485bd5f9e133c553b2e48dfe2
      - uses: rymndhng/release-on-push-action@v0.23.1
        with:
          # The bumping scheme to use by default. One of minor|major|patch|norelease
          bump_version_scheme: minor
          # Additional text to insert into the release's body.
          release_body: Vital signs monitor simulator and backend client.
          # Prefix to append to git tags. To unset this, set version_prefix to an empty string.
          #tag_prefix: # optional, default is v
          # Maximum number of commits to add to release body
          # max_commits: # optional, default is 50
          # When set to 'true', uses Github's Generated Release Notes instead of this plugin's release notes
          # use_github_release_notes: # optional, default is false
          release_name: "Release <RELEASE_VERSION>"
      - uses: actions/upload-artifact@master
        with:
          name: Simulator
          path: .\VitalSignsMonitorSimulator\Simulator\bin\Release\Simulator.exe
      - uses: actions/upload-artifact@master
        with:
          name: Client
          path: .\VitalSignsMonitorSimulator\Client\bin\Release\Client.exe
  
