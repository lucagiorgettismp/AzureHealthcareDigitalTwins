# This is a basic workflow to help you get started with Actions

name: Development CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the development branch
  push:
    branches: [ development]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  SIMULATOR_SOLUTION_PATH: '.\VitalSignsMonitorSimulator\Simulator\Simulator.csproj'
  CLIENT_SOLUTION_PATH: '.\VitalSignsMonitorSimulator\Client\Client.csproj'
  PACKAGES_PATH: '.\VitalSignsMonitorSimulator\packages\'
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy-app-function:
    runs-on: windows-latest
    env:
      AZURE_FUNCTIONAPP_PACKAGE_PATH: '.\AzureTools\AzureAppFunctions\AppFunctions' # set this to the path to your web app project, defaults to the repository root
      DOTNET_VERSION: '3.1' # set this to the dotnet version to use

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'healthcareIoTHubToDT'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_209DF526DE564123BAA37635737D89AB }}


  build-simulator:
    runs-on: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
  
      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ env.SIMULATOR_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}
        
      - name: Build
        run: msbuild ${{ env.SIMULATOR_SOLUTION_PATH }} /p:Configuration=Release
        
      - uses: actions/upload-artifact@master
        with:
          name: Simulator
          path: .\VitalSignsMonitorSimulator\Simulator\bin\Release\Simulator.exe 
        
  build-client:
    runs-on: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
  
      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ env.CLIENT_SOLUTION_PATH }} -PackagesDirectory ${{ env.PACKAGES_PATH }}
        
      - name: Build
        run: msbuild ${{ env.CLIENT_SOLUTION_PATH }} /p:Configuration=Release
        
      - uses: actions/upload-artifact@master
        with:
          name: Client
          path: .\VitalSignsMonitorSimulator\Client\bin\Release\Client.exe 


  jobs-failure:
      needs: [build-and-deploy-app-function, build-simulator, build-client]
      if: failure()
      runs-on: [ubuntu-latest]

      steps:
      - name: Send telegram failure message
        uses: appleboy/telegram-action@master

        with:
          to: ${{ secrets.TELEGRAM_TO_LUCA }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
                ${{ github.event_name }} event,
                on github.com/${{ github.repository }},
                by ${{ github.actor }}:
                <b>${{ github.event.head_commit.message }}</b>
                ❌ <b>FAILED</b> ❌
          format: html
          disable_web_page_preview: true

     - name: Send telegram failure message to Lorenzo
        uses: appleboy/telegram-action@master

        with:
          to: ${{ secrets.TELEGRAM_TO_LORENZO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
                ${{ github.event_name }} event,
                on github.com/${{ github.repository }},
                by ${{ github.actor }}:
                <b>${{ github.event.head_commit.message }}</b>
                ❌ <b>FAILED</b> ❌
          format: html
          disable_web_page_preview: true


  jobs-success:
    needs: [build-and-deploy-app-function, build-simulator, build-client]
    if: success()
    runs-on: [ ubuntu-latest]

    steps:
    - name: Send telegram success message
      uses: appleboy/telegram-action@master

      with:
        to: ${{ secrets.TELEGRAM_TO_LUCA }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
              ${{ github.event_name }} event,
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>${{ github.event.head_commit.message }}</b>
              ✅ <b>SUCCEDED</b>
        format: html
        disable_web_page_preview: true

    - name: Send telegram success message to Lorenzo
      uses: appleboy/telegram-action@master

      with:
        to: ${{ secrets.TELEGRAM_TO_LORENZO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
              ${{ github.event_name }} event,
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>${{ github.event.head_commit.message }}</b>
              ✅ <b>SUCCEDED</b>
        format: html
        disable_web_page_preview: true
